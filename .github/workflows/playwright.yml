name: Playwright tests
on:
  workflow_call:
  workflow_dispatch:

jobs:
  run-playwright:
    name: Run Playwright
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: './frontend'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: podkrepi-bg/api
          ref: master
          path: './api'

      - name: Set yarn version
        run: yarn set version berry

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/.next/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run db
        working-directory: ./api
        run: docker compose up -d pg-db

      - name: Run stripe webhook
        working-directory: ./api
        env:
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: docker compose up -d stripe-webhook

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        working-directory: ./api
        run: yarn

      - name: Seed database
        working-directory: ./api
        run: yarn prisma generate && yarn prisma migrate deploy && yarn prisma db seed

      - name: Run backend
        working-directory: ./api
        env:
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: yarn start &> api.log &

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: yarn

      - name: Setup env
        working-directory: ./frontend
        run: cp .env.local.example .env.local

      - name: Build frontend
        working-directory: ./frontend
        run: yarn run next build

      - name: Wait on backend
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http-get://localhost:5010/api/v1/campaign/list
          timeout: 120000

      - name: Test Backend is ready
        working-directory: ./frontend
        run: curl http://localhost:5010/api/v1/campaign/list

      - name: Start frontend
        working-directory: ./frontend
        run: yarn start &> frontend.log &

      - name: Install Playwright Browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Wait on frontend
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http-get://localhost:3040
          timeout: 120000

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: yarn playwright test e2e/local

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./frontend/playwright-report/
          retention-days: 14

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: logs
          path: |
            ./frontend/frontend.log
            ./api/api.log
          retention-days: 14
